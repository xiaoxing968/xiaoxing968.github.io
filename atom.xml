<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title> </title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-19T16:00:00.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>xiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue3中调用高德地图选点功能</title>
    <link href="http://example.com/2022/09/20/Amap/vue3%E4%B8%AD%E8%B0%83%E7%94%A8%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/"/>
    <id>http://example.com/2022/09/20/Amap/vue3%E4%B8%AD%E8%B0%83%E7%94%A8%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/</id>
    <published>2022-09-19T16:00:00.000Z</published>
    <updated>2022-09-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id=""><a href="#" class="headerlink" title=""></a></h4><p>在项目中有需求为：在地图上选点 获取选中点位的坐标，所以选用了高德地图的api。在网上找了很久发现大多案例都是vue2中 通过CDN的方式引用的，根据官方文档的建议，为了更好的契合 Vue 使用我选用的是通过npm包安装的方式（vue3 + tsx）。</p><ol><li><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @amap/amap-jsapi-loader --save</span><br></pre></td></tr></table></figure></li><li><p>新建文件<code>MapContainer.tsx</code></p><ol><li><p>基本HTML结构</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="comment">// 引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AMapLoader</span> <span class="keyword">from</span> <span class="string">&#x27;@amap/amap-jsapi-loader&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">     &#123;/*挂载地图的容器*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#123;</span>&#x27;<span class="attr">container</span>&#x27;&#125; <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">100</span>%&#x27; &#125;&#125;&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         &#123;/*如果不需要POI搜索可以不要下面的部分*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pickerBox&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pickerInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入关键字选取地点&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;poiInfo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>初始化配置</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AMapLoader</span> <span class="keyword">from</span> <span class="string">&#x27;@amap/amap-jsapi-loader&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; shallowRef &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/reactivity&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params">props, &#123; emit &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> map = <span class="title function_">shallowRef</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> siteInfo = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">initMap</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="title class_">AMapLoader</span>.<span class="title function_">load</span>(&#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&#x27;xxxxx&#x27;</span>,             <span class="comment">// 申请好的Web端开发者Key，首次调用 load 时必填</span></span><br><span class="line">        <span class="attr">version</span>: <span class="string">&#x27;2.0&#x27;</span>,      <span class="comment">// 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span></span><br><span class="line">        <span class="attr">plugins</span>: [<span class="string">&#x27;AMap.Scale&#x27;</span>, <span class="string">&#x27;AMap.ToolBar&#x27;</span>],       <span class="comment">// 需要使用的的插件列表，如比例尺&#x27;AMap.Scale&#x27;等</span></span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">AMap</span>) =&gt;</span> &#123;</span><br><span class="line">        map.<span class="property">value</span> = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&#x27;container&#x27;</span>, &#123;  <span class="comment">//设置地图容器id</span></span><br><span class="line">          <span class="attr">viewMode</span>: <span class="string">&#x27;3D&#x27;</span>,    <span class="comment">//是否为3D地图模式</span></span><br><span class="line">          <span class="attr">zoom</span>: <span class="number">15</span>,           <span class="comment">//初始化地图级别</span></span><br><span class="line">          <span class="attr">center</span>: [<span class="number">112.938882</span>, <span class="number">28.228304</span>], <span class="comment">//初始化地图中心点位置</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">initMap</span>(); <span class="comment">//  一定需要在Mounted后初始化</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/*挂载地图的容器*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#123;</span>&#x27;<span class="attr">container</span>&#x27;&#125; <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">100</span>%&#x27; &#125;&#125;&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/*如果不需要POI搜索可以不要下面的部分*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pickerBox&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pickerInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入关键字选取地点&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;poiInfo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>使用组件</p><p>与CDN引入的方式不同。在这里折腾了好一会才整出来，网上也没找到类似的案例</p><p>官方文档案例如下</p><img src="http://image.xxymie.com/public/blogs/positionPicker1.png" style="zoom:50%" /><p>按照官网文档案例会存在找不到<code>AMapUI</code>等问题，后面发现可以在初始化地图的时候可以通过：</p><ol><li>添加<code>AMapUI.plugins</code>配置项的方式安装组件</li><li>然后在地图初始化完后调用<code>AMapUI</code>，此时<code>AMapUI</code>挂载在全局<code>window</code>上</li><li>该<code>AMapUI</code>里面包含了<code>AMapUI.plugins</code>里对应组件的构造器</li></ol><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AMapLoader</span> <span class="keyword">from</span> <span class="string">&#x27;@amap/amap-jsapi-loader&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; shallowRef &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/reactivity&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params">props, &#123; emit &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> map = <span class="title function_">shallowRef</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> siteInfo = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">initMap</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="title class_">AMapLoader</span>.<span class="title function_">load</span>(&#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&#x27;804f4c97664839e5bbc18f434348f778&#x27;</span>,</span><br><span class="line">        <span class="attr">version</span>: <span class="string">&#x27;2.0&#x27;</span>,</span><br><span class="line">        <span class="attr">plugins</span>: [<span class="string">&#x27;AMap.Scale&#x27;</span>, <span class="string">&#x27;AMap.ToolBar&#x27;</span>], </span><br><span class="line">        <span class="title class_">AMapUI</span>: &#123;</span><br><span class="line">          <span class="attr">plugins</span>: [<span class="string">&#x27;misc/PositionPicker&#x27;</span>], <span class="comment">// 添加组件</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">AMap</span>) =&gt;</span> &#123;</span><br><span class="line">        map.<span class="property">value</span> = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&#x27;container&#x27;</span>, &#123;</span><br><span class="line">          <span class="attr">viewMode</span>: <span class="string">&#x27;3D&#x27;</span>,</span><br><span class="line">          <span class="attr">zoom</span>: <span class="number">15</span>,</span><br><span class="line">          <span class="attr">center</span>: [<span class="number">112.938882</span>, <span class="number">28.228304</span>],</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">const</span> marker = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">          <span class="comment">// position: [105.602725, 37.076636],</span></span><br><span class="line">        &#125;);</span><br><span class="line">        map.<span class="property">value</span>.<span class="title function_">add</span>(marker);</span><br><span class="line">        <span class="keyword">const</span> picker = <span class="keyword">new</span> (<span class="variable language_">window</span> <span class="keyword">as</span> <span class="built_in">any</span>).<span class="property">AMapUI</span>.<span class="title class_">PositionPicker</span>(&#123; <span class="comment">// 配置需要的组件</span></span><br><span class="line">          <span class="attr">map</span>: map.<span class="property">value</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        picker.<span class="title function_">on</span>(<span class="string">&#x27;success&#x27;</span>, <span class="keyword">function</span> (<span class="params">positionResult: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(positionResult); <span class="comment">// 选中点位的位置信息</span></span><br><span class="line">        &#125;);</span><br><span class="line">        picker.<span class="title function_">on</span>(<span class="string">&#x27;fail&#x27;</span>, <span class="keyword">function</span> (<span class="params">positionResult: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(positionResult, <span class="string">&#x27;fail&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        picker.<span class="title function_">start</span>();</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">initMap</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/*挂载地图的容器*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#123;</span>&#x27;<span class="attr">container</span>&#x27;&#125; <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">100</span>%&#x27; &#125;&#125;&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/*如果不需要POI搜索可以不要下面的部分*/&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pickerBox&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pickerInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入关键字选取地点&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;poiInfo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ol><p>​            最终效果：</p><p>​                <img src="http://image.xxymie.com/public/blogs/site.png" style="zoom:50%;" />    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在项目中有需求为：在地图上选点 获取选中点位的坐标，所以选用了高德地图的api。在网上找了很久发现大多案例都是vue2中 通过CDN的方式引用的，根据官方文</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>ant select 通过onSearch获取的数据没有更新</title>
    <link href="http://example.com/2022/01/19/ant/"/>
    <id>http://example.com/2022/01/19/ant/</id>
    <published>2022-01-18T16:00:00.000Z</published>
    <updated>2022-01-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="ant-design-a-select-数据源更新，但视图没更新的问题"><a href="#ant-design-a-select-数据源更新，但视图没更新的问题" class="headerlink" title="ant design a-select 数据源更新，但视图没更新的问题"></a>ant design a-select 数据源更新，但视图没更新的问题</h5><p>​    在使用a-select时，发现通过onSearch事件从后端获取到的数据已经更新到了数据源，但是页面上没有任何反应，第一反应是响应式丢失了，然后从控制台输出出来发现并不是数据的问题。</p><p>​    <img src=".\ant-select.png" alt="ant-select" style="zoom: 50%;" /></p><img src=".\ant-select2.jpg" alt="ant-select2" style="zoom:50%;" /><p>最后看文档示例时发现，select的filterOption属性默认为true…等于说组件在接受到我的数据后又过滤了一遍，这才导致前面看到的数据源更新，视图无变化的问题，把filterOption改为false或者是定义一个filter方法就行了。</p>]]></content>
    
    
    <summary type="html">ant design a-select 通过onSearch获取的数据,数据源更新，但视图没更新的问题（vue3+tsx）</summary>
    
    
    
    
    <category term="TypeScript" scheme="http://example.com/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>TS入门</title>
    <link href="http://example.com/2021/09/20/TS/"/>
    <id>http://example.com/2021/09/20/TS/</id>
    <published>2021-09-19T16:00:00.000Z</published>
    <updated>2021-09-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="TS声明数据"><a href="#TS声明数据" class="headerlink" title="TS声明数据"></a>TS声明数据</h4><ul><li><p>普通数据类型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 布尔值</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">bool</span>:<span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line">bool = <span class="number">1</span> <span class="comment">// 不能将类型“number”分配给类型“boolean”。ts(2322)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">isNaN</span>: <span class="built_in">number</span> = <span class="title class_">NaN</span></span><br><span class="line"><span class="built_in">isNaN</span> = <span class="number">666</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// String </span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">str</span>:<span class="built_in">string</span> = <span class="string">&#x27;string&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">u</span>: <span class="built_in">void</span> = <span class="literal">undefined</span>; <span class="comment">// undefined 相反，void不能赋值给undefined</span></span><br><span class="line"><span class="comment">// void 常用于表示函数是否有返回值</span></span><br><span class="line"><span class="comment">// undefined和null可以赋值给任意类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 联合类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">str</span>:<span class="built_in">string</span> | <span class="built_in">number</span> = <span class="string">&#x27;string&#x27;</span> <span class="comment">// 可以选择多种类型 使用 | 分隔</span></span><br><span class="line">str = <span class="number">666</span></span><br><span class="line"><span class="comment">// 在vue3中 </span></span><br><span class="line"><span class="keyword">let</span> str = ref&lt;<span class="built_in">string</span>&gt;(<span class="string">&#x27;str&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他同上</span></span><br></pre></td></tr></table></figure></li><li><p>任意值</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data <span class="comment">// 只声明 未赋值，此时可以对他进行任何类型的复杂</span></span><br><span class="line">data = <span class="number">1</span></span><br><span class="line">data = <span class="string">&#x27;string&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">666</span> <span class="comment">// 这个时候虽然没有声明数据类型，但是在第一次赋值的时候，会隐式的声明一个初始化值的类型</span></span><br><span class="line"><span class="comment">// 现在这个num是number类型了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">data2</span>: <span class="built_in">any</span> = <span class="number">6</span></span><br><span class="line">data2 = <span class="string">&#x27;string&#x27;</span> <span class="comment">// any 任意类型</span></span><br></pre></td></tr></table></figure></li><li><p>数组与对象（接口，泛型）</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Data</span> &#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="built_in">string</span>,</span><br><span class="line">  <span class="attr">age</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">data</span>: <span class="title class_">Data</span>  = &#123;</span><br><span class="line">  <span class="attr">age</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">data</span>: <span class="title class_">Data</span> = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">a</span>:<span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 使用interface定义一个接口 定义数据时要按照接口里所约束的属性定义，包括数量，类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="comment">// 表示定义一个由number类型组成的数组</span></span><br><span class="line"><span class="keyword">let</span> str = ref&lt;<span class="built_in">string</span>[]&gt;([])</span><br><span class="line"><span class="comment">// 泛型 同上</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span> | <span class="built_in">string</span>&gt; = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>,<span class="string">&#x27;str&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>: <span class="built_in">string</span> [][] = [[<span class="string">&#x27;str&#x27;</span>],[<span class="string">&#x27;str2&#x27;</span>]] <span class="comment">// 多维数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: [<span class="built_in">number</span>, <span class="built_in">string</span>] = [<span class="number">1</span>, <span class="string">&quot;2&quot;</span>] <span class="comment">// 元组 length 类型一一对应</span></span><br></pre></td></tr></table></figure></li><li><p>泛型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 泛型有什么用？</span></span><br><span class="line"><span class="keyword">const</span> fn = (<span class="attr">a</span>: <span class="built_in">number</span> | <span class="built_in">string</span>, <span class="attr">b</span>: <span class="built_in">number</span> | <span class="built_in">string</span>): <span class="title class_">Array</span>&lt;<span class="built_in">number</span> | <span class="built_in">string</span>&gt; =&gt; a + b;</span><br><span class="line"><span class="comment">// 假如我定义了一个公用的方法，但是希望避免：这种fn(1,&#x27;abc&#x27;),参数1与参数2不同类型的情况。</span></span><br><span class="line"><span class="comment">// 那么可以改写为如下</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Fn</span>&lt;T&gt; = <span class="function">(<span class="params">a: T, b: T</span>) =&gt;</span> T;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>: <span class="title class_">Fn</span>&lt;<span class="built_in">number</span>&gt; = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b</span><br><span class="line"><span class="comment">// 泛型使用上类似函数，定义一个形参，使用时再传参</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Ls</span>&lt;T&gt; = T | T[];</span><br><span class="line"><span class="keyword">type</span> P&lt;B&gt; = <span class="title class_">Ls</span>&lt;B&gt;;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: P&lt;<span class="built_in">boolean</span>&gt; = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></li><li><p>函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义函数的几种方法</span></span><br><span class="line"><span class="comment">// 1.</span></span><br><span class="line"><span class="keyword">const</span> fn = (<span class="attr">a</span>: <span class="built_in">number</span>, <span class="attr">b</span>: <span class="built_in">number</span>): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line"><span class="keyword">return</span> a + b; <span class="comment">// 不能将类型“number”分配给类型“void”。ts(2322)</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>: <span class="function">(<span class="params">a: <span class="built_in">number</span>,b :<span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span> = <span class="function">(<span class="params">a,b</span>) =&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Fn</span> = <span class="function">(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>: <span class="title class_">Fn</span> = <span class="function">(<span class="params">a,b</span>) =&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a,b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 这里有问题</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>可选参数，断言，别名等</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可选参数</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Data</span> &#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="built_in">string</span>,</span><br><span class="line">  age?:<span class="built_in">number</span> <span class="comment">// 问号表示该值为可选参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">data</span>: <span class="title class_">Data</span>  = &#123;</span><br><span class="line">  <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fn = (<span class="attr">a</span>: <span class="built_in">number</span>, b?: <span class="built_in">number</span>): <span class="function"><span class="params">number</span> =&gt;</span> a + b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params">a:<span class="built_in">number</span>,b: <span class="built_in">number</span> = <span class="number">60</span></span>)=&gt;&#123; <span class="comment">// 如果使用了ES6默认参数，那么这个形参默认为可选参数</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a+=b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fn = (<span class="attr">a</span>: <span class="built_in">number</span>, ...<span class="attr">rest</span>: <span class="built_in">any</span>[]): <span class="function"><span class="params">number</span> =&gt;</span> &#123;&#125;; <span class="comment">// 剩余值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="built_in">number</span> | <span class="built_in">string</span> = 某个未知类型的数据;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">length</span>); <span class="comment">// 现在会报错，类型“number”上不存在属性“length”；因为联合类型的数据只能访问他们共同的属性。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>((a <span class="keyword">as</span> sting).<span class="property">length</span>) <span class="comment">// 将他断言为string类型</span></span><br><span class="line"><span class="comment">// 但是断言不能转换数据类型，只能使其编译成功</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;TS声明数据&quot;&gt;&lt;a href=&quot;#TS声明数据&quot; class=&quot;headerlink&quot; title=&quot;TS声明数据&quot;&gt;&lt;/a&gt;TS声明数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;普通数据类型&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="TypeScript" scheme="http://example.com/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue3的新特性</title>
    <link href="http://example.com/2021/09/20/vue3/"/>
    <id>http://example.com/2021/09/20/vue3/</id>
    <published>2021-09-19T16:00:00.000Z</published>
    <updated>2021-09-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Vue3与Vue2的区别"><a href="#Vue3与Vue2的区别" class="headerlink" title="Vue3与Vue2的区别"></a>Vue3与Vue2的区别</h3><ol><li><h6 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h6><ul><li><p>setup会在created之前就执行，所以是不能取到当前实例的</p></li><li><p>数据的定义不需要通过data 返回一个对象的方法了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref,computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123; <span class="comment">// vue2写法</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">flag</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123; <span class="comment">// 等于以上vue2的写法</span></span><br><span class="line">    <span class="comment">// 要import ref  </span></span><br><span class="line">    <span class="keyword">const</span> flag = <span class="title function_">ref</span>(<span class="literal">false</span>) <span class="comment">// 其实构建的是个对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 必须要return出去 否则模板里取不到</span></span><br><span class="line">    <span class="keyword">return</span> &#123; flag &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​    如果不是用ref创建的变量是不支持响应式的</p></li><li><p>定义方法 也不需要<code>methods</code>了，直接在<code>setup</code>里面定义后再返回出去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">toggle</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">      flag.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">      <span class="comment">// 是个对象 操作数据需要使用flag.value</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fn&#x27;</span>)</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">x</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">const</span> getValue = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123; <span class="comment">// 计算属性（要引入）</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;)  </span><br><span class="line">    <span class="keyword">const</span> changeValue = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123; <span class="comment">// set get照常</span></span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> modelValue</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">newval</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&quot;update:modelValue&quot;</span>, newval)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123; toggle, fn, x, getValue &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h6 id="reactive-是用于创建对象，并且只能用于创建对象和数组"><a href="#reactive-是用于创建对象，并且只能用于创建对象和数组" class="headerlink" title="reactive 是用于创建对象，并且只能用于创建对象和数组"></a><code>reactive </code>是用于创建对象，并且只能用于创建对象和数组</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        <span class="attr">xx</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">yy</span>:<span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123; ...<span class="title function_">toRefs</span>(data) &#125; <span class="comment">// 直接把数据存在data里面就不需要每次操作数据的时候还要xxx.value了</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><h6 id="toRefs"><a href="#toRefs" class="headerlink" title="toRefs"></a>toRefs</h6><ul><li>响应式对象结构之后的属性是不具有响应式的，toRefs能将每一个属性变成响应式</li><li>toRef的用法：toRef(对象，属性) 单个处理。</li></ul></li><li><h6 id="获取props"><a href="#获取props" class="headerlink" title="获取props"></a>获取props</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params">props,context</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(props) <span class="comment">// 是一个Proxy实例对象，里面就是父组件传递的props</span></span><br><span class="line">      </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(context)</span><br><span class="line">    <span class="comment">// attrs props未接收的所有参数</span></span><br><span class="line">    <span class="comment">// emit // 同$emit</span></span><br><span class="line">    <span class="comment">// expose 是用来控制暴露数据的</span></span><br><span class="line">    <span class="comment">// slots 插槽</span></span><br><span class="line">    <span class="keyword">return</span> &#123;  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>expose的用法</p><img src=".\vue3\expose.png" style="zoom: 80%;" /> <p><img src=".%5Cvue3%5Cexpose2.png">  </p><p>在没有使用expose的时候，父组件可以通过ref来获取子组件和子组件里面的所有数据</p><p>使用后如下</p><p>​    <img src=".\vue3\expose3.png" style="zoom: 80%;" /></p><p>​        <img src=".\vue3\expose4.png" style="zoom: 80%;" /></p><p>所以expose是控制暴露数据的</p></li><li><h6 id="获取ref的方法"><a href="#获取ref的方法" class="headerlink" title="获取ref的方法"></a>获取ref的方法</h6><p>因为现在不能通过this获取到vue实例，所以之前的this.$refs不能用了。而是改为如下方法<img src=".\ref.png" /></p></li><li><p>emit，slots</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">  &lt;template&gt;</span><br><span class="line">  &lt;slot name=&quot;btn&quot;&gt;&lt;/slot&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">      </span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &#x27;&#x27;,</span><br><span class="line">    emits: [&#x27;collapse&#x27;],</span><br><span class="line">    setup(props, &#123; emit, slots&#125;) &#123;</span><br><span class="line">      const handleClick = () =&gt; &#123;</span><br><span class="line">        emit(&#x27;collapse&#x27;, !props.collapsed);</span><br><span class="line">        emit(&#x27;update:flag&#x27;,true);</span><br><span class="line">        console.log(slots?.btn)</span><br><span class="line">      &#125;;  </span><br><span class="line">      return &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">- watch , watchEffect</span><br><span class="line"></span><br><span class="line">  ```vue</span><br><span class="line">  &lt;template&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  import &#123; watch,watchEffect,ref &#125; from &#x27;vue&#x27;;    </span><br><span class="line">  export default &#123;</span><br><span class="line">    setup(props, &#123; emit, slots&#125;) &#123;</span><br><span class="line">      const visible = ref(false);</span><br><span class="line">      const changeVisible = () =&gt; &#123;</span><br><span class="line">          visible.value = !visible.value;</span><br><span class="line">      &#125;;</span><br><span class="line">      watch(() =&gt; visible, (newval) =&gt; &#123;</span><br><span class="line">        console.log(newval)</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        deep: true,</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      // 初次加载就加载一次</span><br><span class="line">      const watcher = watchEffect(() =&gt; &#123; // 返回值为取消当前监听的方法</span><br><span class="line">        console.log(visible.value); // 跟computed类似，监听依赖的值，不需要像watch一样指定</span><br><span class="line">      &#125;)</span><br><span class="line">      watcher();</span><br><span class="line">      return &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>inject, provide, onMounted, vuex, vue-router, getCurrentInstance</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;父组件&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; provide &#125; from &#x27;vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123; // 只能在setup里面使用，不然控制台有警告</span><br><span class="line"> provide(&#x27;haha&#x27;, 123);</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;子组件&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; inject ,computed ,getCurrentInstance&#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; useStore &#125; from &#x27;vuex&#x27;;</span><br><span class="line">import &#123; useRoute, useRouter &#125; from &#x27;vue-router&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const store = useStore(); // 获取当前路由信息</span><br><span class="line">    const router = useRouter(); // 获取当前路由实例</span><br><span class="line">    const store = useStore(); // 获取当前仓库实例</span><br><span class="line"> console.log(inject(&#x27;haha&#x27;)); // 123</span><br><span class="line">  onMounted(() =&gt; &#123;</span><br><span class="line">    const userInfo = computed(() =&gt; store.getters[&#x27;user/info&#x27;]);</span><br><span class="line">        const instance = getCurrentInstance(); // 获取当前实例</span><br><span class="line">    console.log(instance);</span><br><span class="line">        router.push(&#123;</span><br><span class="line">        path: &#x27;/work-main/chainDesign&#x27;,</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>​        </p>]]></content>
    
    
    <summary type="html">在带新同事熟悉TS项目时顺手整理记录 用到了 Vue3 + 部分TS + Vite</summary>
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>自定义滚动条</title>
    <link href="http://example.com/2021/05/16/mCustomScrollbar/"/>
    <id>http://example.com/2021/05/16/mCustomScrollbar/</id>
    <published>2021-05-15T16:00:00.000Z</published>
    <updated>2021-05-15T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="mCustomScrollbar自定义滚动条"><a href="#mCustomScrollbar自定义滚动条" class="headerlink" title="mCustomScrollbar自定义滚动条"></a>mCustomScrollbar自定义滚动条</h4><h6 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;xxx/xxx/jquery.mCustomScrollbar.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h6 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h6><ul><li>在ejs模板里面，通过js初始化；</li><li>以下示例在合同系统查看，文件路径<code>views\common\contractLayout.ejs</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="variable language_">window</span>).<span class="title function_">load</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            $(<span class="string">&#x27;.mCustomScrollbar&#x27;</span>).<span class="title function_">mCustomScrollbar</span>(&#123;</span><br><span class="line">                <span class="attr">scrollButtons</span>: &#123;</span><br><span class="line">                    <span class="attr">enable</span>: <span class="literal">true</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">callbacks</span>: &#123;</span><br><span class="line">                    <span class="attr">onScroll</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">setHeight</span>: $(<span class="variable language_">window</span>).<span class="title function_">height</span>(),</span><br><span class="line">                <span class="attr">scrollInertia</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">theme</span>: <span class="string">&quot;one-light-thin&quot;</span>,</span><br><span class="line">                <span class="attr">axis</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">                <span class="attr">autoDraggerLength</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">autoExpandScrollbar</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">alwaysShowScrollbar</span>: <span class="number">1</span>, <span class="comment">// 一直显示滚动条</span></span><br><span class="line">                <span class="attr">autoHideScrollbar</span>:<span class="literal">false</span>, <span class="comment">// 是否自动隐藏滚动条</span></span><br><span class="line">                <span class="attr">mouseWheel</span>:&#123;</span><br><span class="line">                    <span class="attr">preventDefault</span>:<span class="literal">true</span>, <span class="comment">// 滚动不影响其他元素</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">advanced</span>:&#123;</span><br><span class="line">                    <span class="attr">autoExpandHorizontalScroll</span>:<span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">autoScrollOnFocus</span>:<span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            $(<span class="string">&#x27;.mCustomScrollbar&#x27;</span>).<span class="title function_">mCustomScrollbar</span>();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;(jQuery))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h6 id="更多配置信息"><a href="#更多配置信息" class="headerlink" title="更多配置信息"></a>更多配置信息</h6><ul><li>如下，贴在这里方便查找</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">setWidth</span>: <span class="literal">false</span>                                 <span class="comment">//设置你内容的宽度 值可以是像素值或者百分比(string),取值300,&quot;30%&quot;</span></span><br><span class="line"><span class="attr">setHeight</span>: <span class="literal">false</span>                                <span class="comment">//设置你内容的高度 值可以是像素值或者百分比(string),取值300,&quot;30%&quot;</span></span><br><span class="line"><span class="attr">setTop</span>: <span class="number">0</span>                                       <span class="comment">//设置一开始纵向滚动的位置,取值&quot;100px&quot;,值为字符串</span></span><br><span class="line"><span class="attr">setLeft</span>: <span class="number">0</span>                                      <span class="comment">//设置一开始横向滚动的位置,取值&quot;100px&quot;,值为字符串</span></span><br><span class="line"><span class="attr">axis</span>: <span class="string">&quot;string&quot;</span>                                  <span class="comment">//&quot;x&quot;,&quot;y&quot;,值为字符串，分别对应横纵向滚动</span></span><br><span class="line"><span class="attr">scrollInertia</span>:<span class="title class_">Integer</span>                           <span class="comment">//滚动的惯性值 在毫秒中 使用0可以无滚动惯性 (滚动惯性可以使区块滚动更加平滑)</span></span><br><span class="line"><span class="attr">scrollbarPosition</span>: <span class="string">&quot;string&quot;</span>                     <span class="comment">//取值&quot;inside&quot;,&quot;outside&quot;,值为字符串,父元素必须是relative定位，滚动条出在元素的内部(inside)或者外部(outside);</span></span><br><span class="line"><span class="attr">autoDraggerLength</span>:<span class="title class_">Boolean</span>：                     <span class="comment">//根据内容区域自动调整滚动条拖块的长度 值:true,false</span></span><br><span class="line"><span class="attr">alwaysShowScrollbar</span>:<span class="title class_">Integer</span>                     <span class="comment">//保持滚动条的显示，取值0,1(保持滚动块可见),2(保持滚动条所有的显示)</span></span><br><span class="line"><span class="attr">mouseWheel</span>:&#123; </span><br><span class="line">    <span class="attr">enable</span>: boolean                             <span class="comment">//启用或禁用通过鼠标滚轮滚动内容。</span></span><br><span class="line">    <span class="attr">scrollAmount</span>: <span class="title class_">Integer</span>                       <span class="comment">//滚轮滚动的像素</span></span><br><span class="line">    <span class="attr">invert</span>: boolean                             <span class="comment">//反转滚动方向</span></span><br><span class="line">&#125;         </span><br><span class="line"></span><br><span class="line"><span class="attr">scrollButtons</span>:&#123; <span class="attr">enable</span>:<span class="title class_">Boolean</span> &#125;                <span class="comment">//是否添加 滚动条两端按钮支持 值:true,false</span></span><br><span class="line"><span class="attr">scrollButtons</span>:&#123; <span class="attr">scrollType</span>:<span class="title class_">String</span> &#125;             <span class="comment">//滚动按钮滚动类型 值:”continuous”(当你点击滚动控制按钮时断断续续滚动) “pixels”(根据每次点击的像素数来滚动) 点击这里可以看到形象的例子</span></span><br><span class="line"><span class="attr">scrollButtons</span>:&#123; <span class="attr">scrollSpeed</span>:<span class="title class_">Integer</span> &#125;           <span class="comment">//设置点击滚动按钮时候的滚动速度(默认 20) 设置一个更高的数值可以更快的滚动</span></span><br><span class="line"><span class="attr">scrollButtons</span>:&#123; <span class="attr">scrollAmount</span>:<span class="title class_">Integer</span> &#125;          <span class="comment">//设置点击滚动按钮时候每次滚动的数值 像素单位 默认 40像素</span></span><br><span class="line"></span><br><span class="line"><span class="attr">advanced</span>:&#123; <span class="attr">updateOnBrowserResize</span>:<span class="title class_">Boolean</span> &#125;      <span class="comment">//根据百分比为自适应布局 调整浏览器上滚动条的大小 值:true,false 设置 false 如果你的内容块已经被固定大小</span></span><br><span class="line"><span class="attr">advanced</span>:&#123; <span class="attr">updateOnContentResize</span>:<span class="title class_">Boolean</span> &#125;      <span class="comment">//自动根据动态变换的内容调整滚动条的大小 值:true,false 设置成 true 将会不断的检查内容的长度并且据此改变滚动条大小 建议除非必要不要设置成 true 如果页面中有很多滚动条的时候 它有可能会产生额外的移出 你可以使用 update 方法来替代这个功能</span></span><br><span class="line"><span class="attr">advanced</span>:&#123; <span class="attr">autoExpandHorizontalScroll</span>:<span class="title class_">Boolean</span> &#125; <span class="comment">//自动扩大水平滚动条的长度 值:true,false 设置 true 你可以根据内容的动态变化自动调整大小 可以看Demo</span></span><br><span class="line"><span class="attr">advanced</span>:&#123; <span class="attr">autoScrollOnFocus</span>:<span class="title class_">Boolean</span> &#125;          <span class="comment">//是否自动滚动到聚焦中的对象 例如表单使用类似TAB键那样跳转焦点 值:true false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">onScrollStart</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; &#125;        <span class="comment">//使用自定义的回调函数在滚动时间开始的时候执行 具体请看Demo</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">onScroll</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; &#125;             <span class="comment">//自定义回调函数在滚动中执行 Demo 同上</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">onTotalScroll</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; &#125;        <span class="comment">//当滚动到底部的时候调用这个自定义回调函数 Demo 同上</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">onTotalScrollBack</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; &#125;    <span class="comment">//当滚动到顶部的时候调用这个自定义回调函数 Demo 同上</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">onTotalScrollOffset</span>:<span class="title class_">Integer</span> &#125;       <span class="comment">//设置到达顶部或者底部的偏移量 像素单位</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">whileScrolling</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125; &#125;       <span class="comment">//当用户正在滚动的时候执行这个自定义回调函数</span></span><br><span class="line"><span class="attr">callbacks</span>:&#123; <span class="attr">whileScrollingInterval</span>:<span class="title class_">Integer</span> &#125;    <span class="comment">//设置调用 whileScrolling 回调函数的时间间隔 毫秒单位</span></span><br><span class="line"><span class="comment">// 以下为文档地址</span></span><br><span class="line"><span class="comment">// https://www.cnblogs.com/theblogs/p/13039379.html</span></span><br><span class="line"><span class="comment">// https://github.com/dadiu/mCustomScrollbar</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">$</span>)&#123;</span><br><span class="line">    $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;#content&quot;</span>).<span class="title function_">mCustomScrollbar</span>(&#123;</span><br><span class="line">            <span class="attr">setWidth</span>: <span class="literal">false</span>,            </span><br><span class="line">            <span class="attr">setHeight</span>: <span class="literal">false</span>,          </span><br><span class="line">            <span class="attr">setTop</span>: <span class="number">0</span>,          </span><br><span class="line">            <span class="attr">setLeft</span>: <span class="number">0</span>,                 </span><br><span class="line">            <span class="attr">axis</span>: <span class="string">&quot;y&quot;</span>,             </span><br><span class="line">            <span class="attr">scrollInertia</span>:<span class="number">0</span>,</span><br><span class="line">            <span class="attr">scrollbarPosition</span>: <span class="string">&quot;inside&quot;</span>,</span><br><span class="line">            <span class="attr">autoDraggerLength</span>:<span class="literal">false</span></span><br><span class="line">            <span class="attr">autoExpandScrollbar</span>:<span class="literal">true</span></span><br><span class="line">            <span class="attr">alwaysShowScrollbar</span>:<span class="number">2</span></span><br><span class="line">            <span class="attr">mouseWheel</span>:&#123;</span><br><span class="line">                <span class="attr">enable</span>:<span class="literal">true</span></span><br><span class="line">                <span class="attr">scrollAmount</span>:<span class="number">10</span></span><br><span class="line">                <span class="attr">preventDefault</span>:<span class="literal">true</span></span><br><span class="line">                <span class="attr">invert</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">scrollButtons</span>:&#123;</span><br><span class="line">                <span class="attr">enable</span>:<span class="literal">false</span>,</span><br><span class="line">                <span class="attr">scrollType</span>:<span class="string">&quot;continuous&quot;</span>,</span><br><span class="line">                <span class="attr">scrollSpeed</span>:<span class="number">20</span>,</span><br><span class="line">                <span class="attr">scrollAmount</span>:<span class="number">40</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">advanced</span>:&#123;</span><br><span class="line">                <span class="attr">updateOnBrowserResize</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">updateOnContentResize</span>:<span class="literal">false</span>,</span><br><span class="line">                <span class="attr">autoExpandHorizontalScroll</span>:<span class="literal">false</span>,</span><br><span class="line">                <span class="attr">autoScrollOnFocus</span>:<span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">callbacks</span>:&#123;</span><br><span class="line">                <span class="attr">onScrollStart</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">                <span class="attr">onScroll</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">                <span class="attr">onTotalScroll</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">                <span class="attr">onTotalScrollBack</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">                <span class="attr">onTotalScrollOffset</span>:<span class="number">0</span>,</span><br><span class="line">                <span class="attr">whileScrolling</span>:<span class="literal">false</span>,</span><br><span class="line">                <span class="attr">whileScrollingInterval</span>:<span class="number">30</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;mCustomScrollbar自定义滚动条&quot;&gt;&lt;a href=&quot;#mCustomScrollbar自定义滚动条&quot; class=&quot;headerlink&quot; title=&quot;mCustomScrollbar自定义滚动条&quot;&gt;&lt;/a&gt;mCustomScrollbar自定义滚</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>select2可远程下拉框</title>
    <link href="http://example.com/2021/05/15/jQuery-select2/"/>
    <id>http://example.com/2021/05/15/jQuery-select2/</id>
    <published>2021-05-14T16:00:00.000Z</published>
    <updated>2021-05-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="select2可远程下拉框"><a href="#select2可远程下拉框" class="headerlink" title="select2可远程下拉框"></a>select2可远程下拉框</h3><ol><li><p>引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/css/select2.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>初始化（两种）</p><ol><li><p>已有select option标签</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _html = <span class="string">&#x27;&lt;option value=&quot;&quot;&gt;--请选择--&lt;/option&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> _persons = ((_dataResult || [])[<span class="number">0</span>] || &#123;&#125;).<span class="property">contacts</span> || [];</span><br><span class="line"><span class="keyword">var</span> _value = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _persons.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    _value = _persons[i].<span class="property">name</span> + <span class="string">&#x27;-&#x27;</span> + _persons[i].<span class="property">role</span>;</span><br><span class="line">    <span class="keyword">var</span> _id = _persons[i].<span class="property">erpId</span></span><br><span class="line">    _html += <span class="string">&#x27;&lt;option value=&quot;&#x27;</span> + _id + <span class="string">&#x27;&quot;&gt;&#x27;</span> + _value + <span class="string">&#x27;&lt;/option&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#box&#x27;</span>).<span class="title function_">html</span>(_html); <span class="comment">// 往select插入option</span></span><br><span class="line">$(<span class="string">&#x27;#box&#x27;</span>).<span class="title function_">select2</span>(); <span class="comment">// 初始化</span></span><br></pre></td></tr></table></figure></li><li><p>通过数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">var</span> _$customSelect2 = $(<span class="string">&#x27;#box&#x27;</span>).<span class="title function_">select2</span>(&#123;</span><br><span class="line">       <span class="attr">placeholder</span>: <span class="string">&#x27;请输入xxxx&#x27;</span>,</span><br><span class="line">       <span class="attr">width</span>: <span class="string">&#x27;170px&#x27;</span>, <span class="comment">// 文本宽度</span></span><br><span class="line">       <span class="attr">delay</span>: <span class="number">1000</span>, <span class="comment">// 文本框停止输入1000毫秒 开始发送请求</span></span><br><span class="line">       <span class="attr">ajax</span>: &#123;</span><br><span class="line">           <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;i8_session.ajaxWfHost +  &#x27;</span>site/ajax_main/getcontactlist<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;async&#x27;</span>: <span class="literal">true</span>,</span><br><span class="line">           <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">           <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">       <span class="comment">// params.term 是输入框内容</span></span><br><span class="line">               _data.<span class="property">contractNum</span> = params.<span class="property">term</span>;</span><br><span class="line">               <span class="keyword">return</span> _data;</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">           <span class="attr">processResults</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">               <span class="keyword">var</span> _list = data.<span class="property">ReturnObject</span> || [];</span><br><span class="line">               <span class="keyword">var</span> _arr = [];</span><br><span class="line">               <span class="keyword">var</span> _listArr = [];</span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; _list.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                   _listArr.<span class="title function_">push</span>(_list[i]);</span><br><span class="line">                   _arr.<span class="title function_">push</span>(&#123;<span class="string">&#x27;id&#x27;</span>:_list[i].<span class="property">ID</span>,<span class="string">&#x27;text&#x27;</span>:_list[i].<span class="property">Name</span>&#125;);</span><br><span class="line">               &#125;</span><br><span class="line">       <span class="comment">// _arr 是用来初始化的数据 格式需要为以下</span></span><br><span class="line">       <span class="comment">// [&#123;&#x27;id&#x27;:xxx,&#x27;text&#x27;:xxx&#125;]</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">               <span class="comment">// if($.isFunction(_callback))&#123;</span></span><br><span class="line">               <span class="comment">//     _callback(_listArr,&#123;&#125;);</span></span><br><span class="line">               <span class="comment">// &#125;</span></span><br><span class="line">               <span class="keyword">var</span> _ret = &#123;&#125;;</span><br><span class="line">               _ret.<span class="property">results</span> = _arr;</span><br><span class="line">               <span class="keyword">return</span> _ret;</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="attr">cache</span>: <span class="literal">true</span>,</span><br><span class="line">           <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">      </span><br></pre></td></tr></table></figure></li></ol></li><li><p>事件 （暂时只用了选择事件 其他参照文档）</p><ul><li><p>选择事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// _$customSelect2是这个select2实例</span></span><br><span class="line">_$customSelect2.<span class="title function_">on</span>(<span class="string">&#x27;select2:select&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        currentContractNo = $(<span class="string">&quot;#box&quot;</span>).<span class="title function_">select2</span>(<span class="string">&quot;data&quot;</span>)[<span class="number">0</span>].<span class="property">text</span>; <span class="comment">// 当前选中的内容</span></span><br><span class="line">        <span class="title function_">fnGetContactList</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>取值 赋值等数据操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#box&quot;</span>).<span class="title function_">val</span>(<span class="string">&#x27;xxxx&#x27;</span>).<span class="title function_">select2</span>(); <span class="comment">// 选中id为 xxxx的option（编辑回显）</span></span><br><span class="line">$(<span class="string">&quot;#box&quot;</span>).<span class="title function_">select2</span>(<span class="string">&quot;data&quot;</span>); <span class="comment">// 取当前选中的数据（是个数组）</span></span><br></pre></td></tr></table></figure></li><li><p>用的时候踩过的坑（使用实例在证书系统的证书申请页面 apply.js）</p><ul><li>点击下拉框准备搜索的时候会闪烁一下 可能是多次调用</li><li>输入内容不触发搜索 可能是重复初始化了</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;select2可远程下拉框&quot;&gt;&lt;a href=&quot;#select2可远程下拉框&quot; class=&quot;headerlink&quot; title=&quot;select2可远程下拉框&quot;&gt;&lt;/a&gt;select2可远程下拉框&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;引入&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
</feed>
